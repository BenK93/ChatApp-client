{"version":3,"sources":["join/join-component.js","light-tooltip/light-tooltip-component.js","header/header-component.js","left-menu/left-menu-component.js","message/message-component.js","text-input-container/text-input-container-component.js","chat-room/chat-room-component.js","App.js","index.js"],"names":["JoinComponent","props","handleClick","event","state","userName","roomName","preventDefault","handleKeyDown","keyCode","history","push","getRedirectedLink","setState","isRoomValid","inputRoom","focus","isNameValid","inputName","document","addEventListener","this","removeEventListener","className","classnames","invalid","placeholder","onChange","target","value","ref","e","onClick","to","PureComponent","LightTooltipComponent","withStyles","theme","tooltip","backgroundColor","palette","common","white","color","boxShadow","shadows","fontSize","Tooltip","title","placement","LeftMenuComponent","addUser","data","userNames","room","uniq","existingUserNames","removeUser","index","indexOf","newUserNames","splice","getUserNames","a","fetch","response","json","socket","on","off","map","key","renderUserNames","message","isSelf","date","Date","getHours","getMinutes","content","TextInputComponent","keys","sendMessage","handleKeyUp","getElementById","method","headers","body","JSON","stringify","id","type","setContent","END_POINT","io","ChatRoomComponent","getMessage","addMessage","messages","uniqBy","AddNewUserMessage","renderMessage","setGlobalVariables","queryString","parse","location","search","joinDate","createRoom","window","onbeforeunload","prevState","scrollableElement","scrollTop","scrollHeight","console","log","element","renderMessages","App","path","exact","component","ReactDom","render","querySelector"],"mappings":"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","file":"static/js/main.ba682b5b.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\nimport \"./join-component.scss\";\n\nconst ENTER_KEY_CODE = 13;\n\nexport default class JoinComponent extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userName: \"\",\n      roomName: \"\",\n      isNameValid: true,\n      isRoomValid: true,\n    };\n  }\n\n  componentDidMount() {\n    // Adding an event listener for a key press\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  /**\n   * Creates a link to the chat room with a user name and a room name.\n   *\n   * @returns {string} Link to chat.\n   */\n  getRedirectedLink() {\n    const { userName, roomName } = this.state;\n    return `/chat?userName=${userName}&roomName=${roomName}`;\n  }\n\n  /**\n   * Handles a mouse click on the enter room button.\n   * Will prevent the event default behavior.\n   *\n   * @param {*} event\n   */\n  handleClick = (event) => {\n    const { userName, roomName } = this.state;\n    if (!userName || !roomName) {\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * Handles a keyboard key press.\n   * Will push to props.history the redirected link if all input are with value.\n   *\n   * @param {*} event\n   */\n\n  handleKeyDown = (event) => {\n    const { userName, roomName } = this.state;\n\n    if (event.keyCode !== ENTER_KEY_CODE) return;\n\n    if (!userName) {\n      this.setState({ isNameValid: false });\n      this.inputName.focus();\n      return;\n    }\n\n    if (!roomName) {\n      this.setState({ isRoomValid: false });\n      this.inputRoom.focus();\n      return;\n    }\n\n    this.props.history.push(this.getRedirectedLink());\n  };\n\n  render() {\n    const { isNameValid, isRoomValid } = this.state;\n    return (\n      <div className=\"join-component\">\n        <div className=\"join-title\">Join</div>\n\n        <div className=\"join-container\">\n          <div className=\"input-container\">\n            <input\n              className={classnames(\"join-input\", { invalid: !isNameValid })}\n              placeholder=\"Name\"\n              onChange={(event) => {\n                this.setState({\n                  isNameValid: true,\n                  userName: event.target.value,\n                });\n              }}\n              ref={(e) => (this.inputName = e)}\n            />\n\n            <input\n              className={classnames(\"join-input\", { invalid: !isRoomValid })}\n              placeholder=\"Room\"\n              onChange={(event) => {\n                this.setState({\n                  isRoomValid: true,\n                  roomName: event.target.value,\n                });\n              }}\n              ref={(e) => (this.inputRoom = e)}\n            />\n          </div>\n\n          <Link\n            className=\"enter-button-link\"\n            onClick={(event) => this.handleClick(event)}\n            to={this.getRedirectedLink()}\n          >\n            <div className=\"enter-button\">ENTER</div>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n","import { withStyles } from \"@material-ui/core/styles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nconst LightTooltipComponent = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: theme.palette.common.white,\n    color: \"rgba(0, 0, 0, 0.87)\",\n    boxShadow: theme.shadows[1],\n    fontSize: 12,\n  },\n}))(Tooltip);\n\nexport default LightTooltipComponent;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./header-component.scss\";\nimport LightTooltipComponent from \"../light-tooltip/light-tooltip-component\";\n\nexport default () => {\n  return (\n    <div className=\"header-component\">\n      <LightTooltipComponent title=\"Log Out\" placement=\"right\">\n        <Link to=\"/\">\n          <button className=\"back-button\">\n            <i className=\"fas fa-arrow-left fa-2x\"></i>\n          </button>\n        </Link>\n      </LightTooltipComponent>\n    </div>\n  );\n};\n","import React, { PureComponent } from \"react\";\nimport uniq from \"lodash/uniq\";\n\nimport \"./left-menu-component.scss\";\nimport { socket } from \"../chat-room/chat-room-component\";\n\nexport default class LeftMenuComponent extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userNames: this.props.room.userNames,\n    };\n  }\n\n  componentDidMount() {\n    this.getUserNames();\n    socket.on(\"user joined\", this.addUser);\n    socket.on(\"user left\", this.removeUser);\n  }\n\n  componentWillUnmount() {\n    socket.off(\"user joined\", this.addUser);\n    socket.off(\"user left\", this.removeUser);\n  }\n\n  addUser = (data) => {\n    const { userNames } = this.state;\n    if (data.roomName !== this.props.room.roomName) return;\n    this.setState({\n      userNames: uniq([...userNames, ...data.existingUserNames, data.userName]),\n    });\n  };\n\n  removeUser = (data) => {\n    const { userNames } = this.state;\n    const { userName, roomName } = data;\n\n    if (roomName !== this.props.room.roomName) return;\n\n    const index = userNames.indexOf(userName);\n    const newUserNames = userNames;\n    newUserNames.splice(index);\n\n    this.setState({\n      userNames: [...newUserNames],\n    });\n  };\n\n  getUserNames = async () => {\n    const response = await fetch(\n      `http://localhost:5000/rooms/getRoom/${this.props.room.roomName}`\n    );\n\n    const room = await response.json();\n\n    if (!room) return;\n\n    this.setState({\n      userNames: uniq([...this.state.userNames, ...room.userNames]),\n    });\n  };\n\n  renderUserNames() {\n    const { userNames } = this.state;\n    return userNames.map((userName, index) => {\n      return userName === this.props.userName ? (\n        <div className=\"participant-name\" key={index}>\n          <b>{userName} (Me)</b>\n        </div>\n      ) : (\n        <div className=\"participant-name\" key={index}>\n          {userName}\n        </div>\n      );\n    });\n  }\n\n  render() {\n    const { room } = this.props;\n    return (\n      <div className=\"left-menu-component\">\n        <div className=\"room-container\">\n          <h2 className=\"header\">Room Name:</h2>\n          <h2 className=\"header room\">{room ? room.roomName : \"\"}</h2>\n        </div>\n\n        <div className=\"participants-container\">\n          <h2 className=\"header\">Participants:</h2>\n\n          <div className=\"items-wrapper\">{this.renderUserNames()}</div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./message-component.scss\";\n\nexport default (props) => {\n  const { message, isSelf } = props;\n  const date = new Date(message.date);\n  return isSelf ? (\n    <div className=\"message-component aligned-right\">\n      <div className=\"message-sender\">\n        <b>{message.userName}</b>\n        <br></br>\n        {date.getHours()}:\n        {(date.getMinutes() < 10 ? \"0\" : \"\") + date.getMinutes()}\n      </div>\n      <div className=\"message-content aligned-right\">{message.content}</div>\n    </div>\n  ) : (\n    <div className=\"message-component\">\n      <div className=\"message-content\">{message.content}</div>\n      <div className=\"message-sender\">\n        <b>{message.userName}</b>\n        <br></br>\n        {date.getHours()}:\n        {(date.getMinutes() < 10 ? \"0\" : \"\") + date.getMinutes()}\n      </div>\n    </div>\n  );\n};\n","import React, { PureComponent } from \"react\";\n\nimport \"./text-input-container-component.scss\";\nimport LightTooltipComponent from \"../light-tooltip/light-tooltip-component\";\n\nconst ENTER_KEY_CODE = 13;\nconst SPACE_KEY_CODE = 16;\n\nexport default class TextInputComponent extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.keys = [];\n    this.state = {\n      content: null,\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n    document.addEventListener(\"keyup\", this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n    document.removeEventListener(\"keyup\", this.handleKeyUp);\n  }\n\n  setContent(content) {\n    this.setState({\n      content,\n    });\n  }\n\n  handleKeyDown = (event) => {\n    this.keys[event.keyCode] = true;\n    if (this.keys[ENTER_KEY_CODE] && !this.keys[SPACE_KEY_CODE]) {\n      event.preventDefault();\n      this.sendMessage();\n    }\n  };\n\n  handleKeyUp = (event) => {\n    delete this.keys[event.keyCode];\n  };\n\n  sendMessage = async () => {\n    const { content } = this.state;\n    const { userName, roomName } = this.props;\n\n    if (!content) return;\n\n    const data = {\n      userName,\n      content,\n      roomName,\n      date: new Date(),\n    };\n\n    document.getElementById(\"text-input\").value = \"\";\n\n    await fetch(\"http://localhost:5000/messages/create\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n\n    this.setState({ content: null });\n  };\n\n  render() {\n    return (\n      <div className=\"text-component\">\n        <textarea\n          id=\"text-input\"\n          type=\"text\"\n          placeholder=\"Type your message here...\"\n          onChange={(event) => this.setContent(event.target.value)}\n        />\n\n        <LightTooltipComponent title=\"Send Message\" placement=\"top\">\n          <button className=\"icon-button send\" onClick={this.sendMessage}>\n            <i className=\"fas fa-paper-plane fa-lg\" />\n          </button>\n        </LightTooltipComponent>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport uniqBy from \"lodash/uniqBy\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\n\nimport \"./chat-room-component.scss\";\nimport HeaderComponent from \"../header/header-component\";\nimport LeftMenuComponent from \"../left-menu/left-menu-component\";\nimport MessageComponent from \"../message/message-component\";\nimport TextInputComponent from \"../text-input-container/text-input-container-component\";\n\nconst END_POINT = \"http://100.24.236.188\";\nlet socket = io(END_POINT);\n\nclass ChatRoomComponent extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.setGlobalVariables();\n\n    this.state = {\n      // Starting with a welcome message from the room.\n      messages: [\n        {\n          userName: this.roomName,\n          content: `Hi ${this.userName}, welcome to chat!`,\n          date: new Date(),\n        },\n      ],\n      // Creating a initial room with this username.\n      room: {\n        roomName: this.roomName,\n        userNames: [this.userName],\n      },\n    };\n  }\n\n  /**\n   * Setting the global variables from the location.search parameters.\n   */\n  setGlobalVariables() {\n    const { userName, roomName } = queryString.parse(\n      this.props.location.search\n    );\n\n    this.userName = userName;\n    this.roomName = roomName;\n    this.joinDate = new Date();\n  }\n\n  componentDidMount() {\n    this.createRoom();\n    window.onbeforeunload = (event) => {\n      event.preventDefault();\n      this.removeUser();\n    };\n    socket.on(\"user joined\", this.AddNewUserMessage);\n    socket.on(\"message sent\", this.getMessage);\n  }\n\n  componentDidUpdate(prevState) {\n    const { messages: prevMessages } = prevState;\n    const { messages: currentMessages } = this.state;\n\n    if (prevMessages !== currentMessages) {\n      this.scrollableElement.scrollTop = this.scrollableElement.scrollHeight;\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeUser();\n    socket.off(\"message sent\", this.getMessage);\n    socket.off(\"user joined\", this.AddNewUserMessage);\n  }\n\n  /**\n   * Creating or getting a room from server.\n   */\n  async createRoom() {\n    console.log(\"in create room\");\n    const data = {\n      roomName: this.roomName,\n      userName: this.userName,\n    };\n\n    const response = await fetch(`${END_POINT}/rooms/create`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n\n    const room = await response.json();\n\n    this.setState({ room });\n  }\n\n  // With socket.io implementation:\n  getMessage = (message) => {\n    this.addMessage(message);\n  };\n\n  addMessage = (message) => {\n    const { messages } = this.state;\n    this.setState({\n      messages: uniqBy([...messages, message], \"_id\"),\n    });\n  };\n\n  AddNewUserMessage = (data) => {\n    if (this.userName === data.userName || this.roomName !== data.roomName)\n      return;\n\n    const message = {\n      userName: data.userName,\n      content: `${data.userName} joined the room!`,\n      date: new Date(),\n    };\n\n    this.setState({\n      messages: uniqBy([...this.state.messages, message], \"content\"),\n    });\n  };\n\n  removeUser = async () => {\n    await fetch(`${END_POINT}/rooms/removeUser`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        roomName: this.roomName,\n        userName: this.userName,\n      }),\n    });\n  };\n\n  renderMessages() {\n    const { messages } = this.state;\n\n    return messages.map(this.renderMessage);\n  }\n\n  renderMessage = (message, index) => {\n    return (\n      <MessageComponent\n        key={index}\n        message={message}\n        isSelf={this.userName === message.userName}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"chat-component\">\n        <div className=\"outer-chat-container\">\n          <div className=\"header-component-wrapper\">\n            <HeaderComponent />\n          </div>\n\n          <div className=\"inner-chat-container\">\n            <div className=\"left-menu-component-wrapper\">\n              <LeftMenuComponent\n                room={this.state.room}\n                userName={this.userName}\n                socket={socket}\n              />\n            </div>\n\n            <div className=\"inner-chat\">\n              <div\n                id=\"messages-component-wrapper\"\n                ref={(element) => (this.scrollableElement = element)}\n              >\n                <div id=\"messages-container\">{this.renderMessages()}</div>\n              </div>\n\n              <div className=\"text-component-wrapper\">\n                <TextInputComponent\n                  userName={this.userName}\n                  roomName={this.roomName}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport { ChatRoomComponent, socket };\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport JoinComponent from \"./join/join-component\";\nimport { ChatRoomComponent } from \"./chat-room/chat-room-component\";\n\nconst App = () => (\n  <Router>\n    <Route path=\"/\" exact component={JoinComponent} />\n    <Route path=\"/chat\" component={ChatRoomComponent} />\n  </Router>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./App\";\n\nReactDom.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}